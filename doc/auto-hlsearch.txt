==============================================================================

*auto-hlsearch.nvim*           For Neovim >= 0.8.0

Author: Alexander Siryk <asiryk.net@gmail.com>
Repository: <https://github.com/asiryk/auto-hlsearch.nvim>
License: Apache-2.0

==============================================================================

INTRODUCTION                                        *auto-hlsearch-introduction*

|auto-hlsearch.nvim| is a plugin that automatically manages 'hlsearch' setting.

It introduces a user command |:AutoHlsearch| that activates the plugin i.e.
enables 'hlsearch' option and starts listening to |CursorMoved|, |InsertEnter|
|autocmd|s and |vim.on_key()| function. The search navigation is ignored, so the
|n| and |N| keys do not deactivate the plugin. But once any other kind of cursor
move is detected, the 'hlsearch' will be turned off with |:noh| command and
listeners removed.

The additional |vim.on_key()| subscription is required in order to detect keys
that don't deactivate the plugin in |CursorMoved| |autocmd|.

The plugin extends user's keybindings in order to call |:AutoHlsearch| command.

==============================================================================

USAGE                                                      *auto-hlsearch-usage*

In order to use the plugin, it is required to call `setup()`.
>
		       require("auto-hlsearch").setup()
<
Calling setup with no arguments will use the default settings. You can pass a
table with the settings you want to override. The defaults are the following:
>
		       require("auto-hlsearch").setup({
		         remap_keys = { "/", "?", "*", "#", "n", "N" },
		       })
<

NOTE: Make sure you set up the plugin after your configuration since you
might override the keybindings. In turn, auto-hlsearch doesn't override the
keybindings but extends them.

The plugin introduces following commands:

  *:AutoHlsearch*
    Activate the 'hlsearch' along with listeners that turn it off when you
    move the cursor.

  *:AutoHlsearchDisable*
    After this command is called, the plugin will stop clearing the highlight,
    i.e. will not call |:noh|. It can be enabled again by |:AutoHlsearchEnable|.

  *:AutoHlsearchEnable*
    Enables the plugin, so it starts calling |:noh| automatically again if it
    was disabled by |:AutoHlsearchDisable|

  *:AutoHlsearchToggle*
    Toggles between |:AutoHlsearchEnable| and |:AutoHlsearchDisable|

==============================================================================

CONFIGURATION                                      *auto-hlsearch-configuration*

  remap_keys ~
    Accepts a lua table with keys for which the |:AutoHlsearch| command would
    be prepended.



 vim:tw=78:ts=8:noet:ft=help:norl:
